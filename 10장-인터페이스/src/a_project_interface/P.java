package a_project_interface;

/*
 * 인터페이스 : 인터페이스를 제공하는 프로그램인 클라이언트 프로그램에 어떤 메서드를 제공하는지 미리 알려주는 명세(=약속).
 */

/*
 * [추상클래스와 인터페이스의 공통점]
 * 1.자식클래스에서 반드시 재정의해야 할 미완성된 추상메서드 존재->안하면 오류. 안하고 싶으면 자식클래스도 추상클래스로 만들어야함.
 * 2.객체 생성 불가 : 이유? 추상메서드가 존재하여 미완성클래스이므로.
 * 3.그러나 부모역할 가능 : 구현한 클래스객체가 자동으로 부모 인터페이스로 형변환되어 대입.
 *   예)P p=new PI();//PI:P인터페이스를 구현한 클래스
 *     m(P p){}
 * 
 * [추상클래스만의 특징]
 * 1.여러 메서드중 단 1개라도 미완성된 추상메서드가 있으면 해당 클래스는 추상클래스가 된다.
 * 
 * [인터페이스만의 특징]
 * 1.멤버변수가 모두 '상수'
 *   int A=1; //public static final 생략가능 //'static final'이 진정한 상수.
 *   멤버변수에 접근하기 : 인터페이스이름(=클래스명).A
 *   
 * 2.메서드가 미완성된 추상메서드 : 반드시 자식(=구현한)클래스에서 재정의 
 *   void a();//public abstract 생략가능.
 *   ★★예외 -1 : static 메서드 : 자체로 완성된 메서드로 바로 메모리에 올라감.클래스 생성과 무관하게 사용가능
 *   		   =>자식클래스에서 재정의 안해도됨.
 *   		     예)static void 이름(){기능}
 *             100개의 클래스 전부 기능 그대로 사용하면 됨.//기능수정을 하고자하면 재정의.
 *             100개의 클래스가 재정의안하고 그냥 인터페이스 이름으로 사용하면 됨.
 *             //사용안해도 되는 클래스에는 필요가 없으므로 default를 써서 사용하고자 하는 클래스에서만 재정의하면 되기때문에 default가 효율적.
 *         -2 : default 메서드 : 자체로 완성된 메서드.접근하려면 객체를 생성하여 주소로 접근해야함.
 *             =>자식클래스에서 필요하면 재정의하면 됨.
 *             예)default void 이름(){기능}
 *             100개의 클래스 중 사용하고자 하는 클래스만 재정의하면 됨.
 *             
 *             예2)default void 전화를받는기능(){"전화를받는다"}
 *             100개의 클래스중 99개는 그대로 사용하고 1개의 클래스만 자기 클래스에맞게 재정의해서 사용해도됨.
 *            
 *         -3 : private 메서드 (JDK 1-9 = 자바9 버전부터 사용가능): 인터페이스  내부에서만 기능을 제공하기위해 구현하는 메서드
 *         		 =>자식 클래스에서 사용하거나 재정의안됨 (private메서드는 상속하지 않기때문에)
 */

/*
 * 홍대표가
 * a회사에 2개의 메서드를 완성해달라고 의뢰
 * 인터페이스(or 추상클래스)에 담아서 의뢰
 */

interface P {//a회사에서 의뢰를받은 인터페이스
	
	//상수(프로그램을 만들기위해 상황에 상관없이 급조한것) 멤버변수 앞에 public static final 생략되있다.
	int INPUT=1, SEARCH=2, EXIT=3;
	
	//메서드1.이름, 주민등록번호, 전화번호를 저장할 메서드
	void input();
	
	//메서드2.주민등록번호를 기반으로 고객의 이름과 전화번호를 검색할 메서드
	void search();
	
	/*************************************************/
	
	//예외-1 : P인터페이스를 구현한 모든 클래스에서 "클래스 생성과 무관하게 사용가능"
	public static int add(int...arr) {//P.add(10,20,30); arr->[10,20,30]
		 int hap=0;
		 for(int item:arr) {
			 hap+=item;
		 }//for문 종료
		 //m1();//static메서드는 바로 메모리에 업로드되기때문에 private 메서드를 여기에 사용할 수 없다.
		 //m2();//m2()메서드는 static이 붙어있기 때문에 같이 메모리에 업로드되어 사용할 수 있다.
		 return hap;
	 }//메서드 종료
	
	 //예외-2
	public default void show() {
		 System.out.println("정보 출력");
		 //m1();//default 메서드에서는 사용가능
	 }//메서드 종료
	
	//예외-3 : 자바9부터 사용가능하므로 오류
	/*private void m1() {//빨간줄 위에 커서를 대보면 JDK 1-9이전 버전은 default 나 static 추가밖에 안뜨는데 1-9 이후 버전은 private까지 뜬다.//자바 9부터 사용가능하므로 오류.
		System.out.println("private 메서드");
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	}//메서드 종료
	
	private static void m2() {//자바 9부터 사용가능하므로 오류.
		System.out.println("합을 구합니다.");
	}//메서드 종료*/
	
}//클래스문
/*******************************************************************************************************/